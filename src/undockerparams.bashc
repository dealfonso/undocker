#!/bin/bash
#
# undocker
# Copyright (C) - 
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# The basic include than gets all from bashc (you should use -S flag to remove the unused functions)
source all.bashc

# A include for the version of this application
source version

DEBUG=true

EXP_1='/^[ ]*-.*  [A-Z]/p'
EXP_2='s/\(^[ ]*-.*  [A-Z]\).*$/\1/g'

#EXP_1='/^[ ]*[a-z]\{2,\}[ ]*  [A-Z]/p'
#EXP_2='s/\(^[ ]*[a-z]\{2,\}[ ]*  [A-Z]\).*$/\1/g'

function extract_params() {
  # BUFFER="$($@ 2>&1 | sed -n "$EXP_1" | sed "$EXP_2")"
  BUFFER="$1"
  L=()
  MAX=0
  while read; do
    S="${#REPLY}"
    p_debug "$S: ${REPLY::-1}"
    if [ "${L[$S]}" == "" ]; then
      L[$S]=0
    fi
    L[$S]=$((${L[$S]}+1))
  done <<<"$(echo "$BUFFER")"
  MAX=-1
  MAX_I=-1
  for I in "${!L[@]}"; do
    if ((${L[$I]}>MAX)); then
      MAX=${L[$I]}
      MAX_I=$I
    fi
  done
  MAX_I=$((MAX_I-1))

  while read; do
    L="$(bashc.trim "${REPLY:0:${MAX_I}}")"
    echo "\"${L/, /|}\""
  done <<< "$BUFFER" 
}

extract_params "$($@ 2>&1 | sed -n '/^[ ]*-.*  [A-Z]/p' | sed 's/\(^[ ]*-.*  [A-Z]\).*$/\1/g')"
extract_params "$($@ 2>&1 | sed -n '/^[ ]*[a-z]\{2,\}[ ]*  [A-Z]/p' | sed 's/\(^[ ]*[a-z]\{2,\}[ ]*  [A-Z]\).*$/\1/g')" 
